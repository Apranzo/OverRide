Dump of assembler code for function main:
   0x0804885a <+0>:	push   ebp
   0x0804885b <+1>:	mov    ebp,esp
   0x0804885d <+3>:	and    esp,0xfffffff0
   0x08048860 <+6>:	sub    esp,0x20
   0x08048863 <+9>:	push   eax
   0x08048864 <+10>:	xor    eax,eax
   0x08048866 <+12>:	je     0x804886b <main+17>
   0x08048868 <+14>:	add    esp,0x4
   0x0804886b <+17>:	pop    eax
   0x0804886c <+18>:	mov    DWORD PTR [esp],0x0
   0x08048873 <+25>:	call   0x80484b0 <time@plt>             ; seed = time(NULL)
   0x08048878 <+30>:	mov    DWORD PTR [esp],eax
   0x0804887b <+33>:	call   0x8048500 <srand@plt>            ; rand(seed)
   0x08048880 <+38>:	mov    DWORD PTR [esp],0x8048a48        ; "***********************************"
   0x08048887 <+45>:	call   0x80484d0 <puts@plt>             ; puts("***********************************")
   0x0804888c <+50>:	mov    DWORD PTR [esp],0x8048a6c        ; "*\t\tlevel03\t\t**"
   0x08048893 <+57>:	call   0x80484d0 <puts@plt>             ; puts("*\t\tlevel03\t\t**")
   0x08048898 <+62>:	mov    DWORD PTR [esp],0x8048a48        ; "***********************************"
   0x0804889f <+69>:	call   0x80484d0 <puts@plt>             ; puts("***********************************")
   0x080488a4 <+74>:	mov    eax,0x8048a7b                    ; "Password:"
   0x080488a9 <+79>:	mov    DWORD PTR [esp],eax
   0x080488ac <+82>:	call   0x8048480 <printf@plt>           ; printf("Password:")
   0x080488b1 <+87>:	mov    eax,0x8048a85                    ; "%d"
   0x080488b6 <+92>:	lea    edx,[esp+0x1c]                   ; input
   0x080488ba <+96>:	mov    DWORD PTR [esp+0x4],edx
   0x080488be <+100>:	mov    DWORD PTR [esp],eax
   0x080488c1 <+103>:	call   0x8048530 <__isoc99_scanf@plt>   ; scanf("%d", input)
   0x080488c6 <+108>:	mov    eax,DWORD PTR [esp+0x1c]         ; input
   0x080488ca <+112>:	mov    DWORD PTR [esp+0x4],0x1337d00d   ; 322424845
   0x080488d2 <+120>:	mov    DWORD PTR [esp],eax
   0x080488d5 <+123>:	call   0x8048747 <test>                 ; test(input, 322424845)
   0x080488da <+128>:	mov    eax,0x0
   0x080488df <+133>:	leave
   0x080488e0 <+134>:	ret
End of assembler dump.
