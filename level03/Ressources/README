gdb> disass main
[...]
   0x080488b1 <+87>:	mov    eax,0x8048a85                    ; "%d"
   0x080488b6 <+92>:	lea    edx,[esp+0x1c]                   ; input
   0x080488ba <+96>:	mov    DWORD PTR [esp+0x4],edx
   0x080488be <+100>:	mov    DWORD PTR [esp],eax
   0x080488c1 <+103>:	call   0x8048530 <__isoc99_scanf@plt>   ; scanf("%d", input)
   0x080488c6 <+108>:	mov    eax,DWORD PTR [esp+0x1c]         ; input
   0x080488ca <+112>:	mov    DWORD PTR [esp+0x4],0x1337d00d   ; 322424845
   0x080488d2 <+120>:	mov    DWORD PTR [esp],eax
   0x080488d5 <+123>:	call   0x8048747 <test>                 ; test(input, 322424845)
[...]
# The program ask for an input, then called the function `test` with our input and the number 322424845

gdb> disass test
[...]
   0x0804874d <+6>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048750 <+9>:	mov    edx,DWORD PTR [ebp+0xc]
   0x08048753 <+12>:	mov    ecx,edx
   0x08048755 <+14>:	sub    ecx,eax                      ; 322424845 - input
   0x08048757 <+16>:	mov    eax,ecx
   0x08048759 <+18>:	mov    DWORD PTR [ebp-0xc],eax
   0x0804875c <+21>:	cmp    DWORD PTR [ebp-0xc],0x15     ; if key > 0x15 (21)
   0x08048760 <+25>:	ja     0x804884a <test+259>
   0x08048766 <+31>:	mov    eax,DWORD PTR [ebp-0xc]
   0x08048769 <+34>:	shl    eax,0x2
   0x0804876c <+37>:	add    eax,0x80489f0
[...]
   0x08048843 <+252>:	call   0x8048660 <decrypt>
   0x08048848 <+257>:	jmp    0x8048858 <test+273>
   0x0804884a <+259>:	call   0x8048520 <rand@plt>       ; rand()
   0x0804884f <+264>:	mov    DWORD PTR [esp],eax
   0x08048852 <+267>:	call   0x8048660 <decrypt>
[...]
# The `test` function correspond to a switch case which called the `decrypt` function with our input
# only if the key is less than 0x15, otherwise the key become a random value

gdb> disass decrypt
[...]
   0x08048711 <+177>:	test   eax,eax
   0x08048713 <+179>:	jne    0x8048723 <decrypt+195>
   0x08048715 <+181>:	mov    DWORD PTR [esp],0x80489d4          ; "/bin/sh"
   0x0804871c <+188>:	call   0x80484e0 <system@plt>             ; system("/bin/sh")
   0x08048721 <+193>:	jmp    0x804872f <decrypt+207>
   0x08048723 <+195>:	mov    DWORD PTR [esp],0x80489dc          ; "\nInvalid Password"
   0x0804872a <+202>:	call   0x80484d0 <puts@plt>               ; puts("\nInvalid Password")
[...]
# The decrypt function called `system("/bin/sh")` if we entered the correct key

# Let's just try every keys from 0 to 21
$> python3
>>> 322424845 - 21
322424824

$> for i in range {322424824..322424845}; do (python -c  "print $i"; cat -) | ./level03 ; done
$ cat /home/users/level04/.pass
kgv3tkEb9h2mLkRsPkXRfc2mHbjMxQzvb2FrgKkf
