gdb> disass main
# The program take a login and a serial number as input
[...]
   0x080488ca <+81>:	call   0x8048510 <printf@plt>       ; printf("-> Enter Login: ")
   0x080488cf <+86>:	mov    eax,ds:0x804a060             ; stdin
   0x080488d4 <+91>:	mov    DWORD PTR [esp+0x8],eax
   0x080488d8 <+95>:	mov    DWORD PTR [esp+0x4],0x20
   0x080488e0 <+103>:	lea    eax,[esp+0x2c]
   0x080488e4 <+107>:	mov    DWORD PTR [esp],eax
   0x080488e7 <+110>:	call   0x8048550 <fgets@plt>        ; fgets(login, 0x20, stdin)
[...]
   0x08048918 <+159>:	call   0x8048510 <printf@plt>       ; printf("-> Enter Serial: ")
   0x0804891d <+164>:	mov    eax,0x8048a60                ; "%u"
   0x08048922 <+169>:	lea    edx,[esp+0x28]
   0x08048926 <+173>:	mov    DWORD PTR [esp+0x4],edx
   0x0804892a <+177>:	mov    DWORD PTR [esp],eax
   0x0804892d <+180>:	call   0x80485e0 <__isoc99_scanf@plt> ; scanf("%u", serial)
[...]
# Then the `auth` function is called with the login and serial provided
[...]
   0x08048941 <+200>:	call   0x8048748 <auth>             ; auth(login, serial)
[...]

# If we dig into the `auth` function we can see a comparison is made with the size of our login
gdb> disass auth
[...]
   0x08048775 <+45>:	call   0x80485d0 <strnlen@plt>        ; len = strnlen(login, 0x20)
   0x0804877a <+50>:	mov    DWORD PTR [ebp-0xc],eax
   0x0804877d <+53>:	push   eax
   0x0804877e <+54>:	xor    eax,eax
   0x08048780 <+56>:	je     0x8048785 <auth+61>
   0x08048782 <+58>:	add    esp,0x4
   0x08048785 <+61>:	pop    eax
   0x08048786 <+62>:	cmp    DWORD PTR [ebp-0xc],0x5        ; len > 5
   0x0804878a <+66>:	jg     0x8048796 <auth+78>
[...]
# A call to ptrace is made which block gdb but we can easily bypass it
[...]
   0x080487b5 <+109>:	call   0x80485f0 <ptrace@plt>         ; ptrace(PTRACE_TRACEME)
   0x080487ba <+114>:	cmp    eax,0xffffffff
   0x080487bd <+117>:	jne    0x80487ed <auth+165>
   0x080487bf <+119>:	mov    DWORD PTR [esp],0x8048a68      ; "\x1b[32m.---------------------------."
   0x080487c6 <+126>:	call   0x8048590 <puts@plt>           ; puts("\x1b[32m.---------------------------.")
   0x080487cb <+131>:	mov    DWORD PTR [esp],0x8048a8c      ; "\x1b[31m| !! TAMPERING DETECTED !!  |"
   0x080487d2 <+138>:	call   0x8048590 <puts@plt>           ; puts("\x1b[31m| !! TAMPERING DETECTED !!  |")
   0x080487d7 <+143>:	mov    DWORD PTR [esp],0x8048ab0      ; "\x1b[32m\'---------------------------\'"
   0x080487de <+150>:	call   0x8048590 <puts@plt>           ; puts("\x1b[32m\'---------------------------\'")
[...]
# Then the serial previously entered is cmp with the hashed serial based on the login
[...]
   0x08048866 <+286>:	cmp    eax,DWORD PTR [ebp-0x10]   ; cmp serial with hash(login)
[...]

gdb> b *0x080487ba
gdb> b *0x08048866
gdb> r
[...]
-> Enter Login: kcosta
[...]
-> Enter Serial: 42
gdb> p $eax=0
gdb> c
gdb> x/d $ebp-0x10
0xffffd658:	6232801

# We have our serial number !
# Let's try to log in
$> ./level06
***********************************
*		level06		  *
***********************************
-> Enter Login: kcosta
***********************************
***** NEW ACCOUNT DETECTED ********
***********************************
-> Enter Serial: 6232801
Authenticated!
$ cat /home/users/level07/.pass
GbcPDRgsFK77LNnnuh7QyFYA2942Gp8yKj9KrWD8
